{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:28:12"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:28:13"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:28:13"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:30:05"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:30:06"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:30:06"}
{"agreeToTerms":true,"email":"mallikrahul3507mr@gmail.com","fullName":"RAHUL MALLIK","level":"info","message":"New User","password":"Rahul##","phone":"+8801727005622","service":"your-service-name","timestamp":"2025-05-20 07:47:08"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:50:10"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:50:10"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:50:11"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:50:43"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:50:45"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:50:46"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:50:46"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:50:52"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:50:52"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:50:53"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:50:55"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:50:55"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:50:56"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:51:36"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:51:37"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:51:37"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:51:59"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:52:00"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:52:00"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:52:05"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:52:05"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:52:06"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:52:17"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:52:18"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:52:19"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:52:22"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:52:24"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:52:25"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:52:26"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:53:40"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:53:40"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:53:41"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","service":"your-service-name","stack":"MongoServerError: E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }\n    at InsertOneOperation.execute (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-05-20 07:53:42"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: SoundExplore.userprofiles index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: SoundExplore.userprofiles index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","service":"your-service-name","stack":"MongoServerError: E11000 duplicate key error collection: SoundExplore.userprofiles index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }\n    at InsertOneOperation.execute (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-05-20 07:54:30"}
{"level":"info","message":"MongoDB connected","service":"your-service-name","timestamp":"2025-05-20 07:54:45"}
{"level":"info","message":"Admin already created","service":"your-service-name","timestamp":"2025-05-20 07:54:46"}
{"level":"info","message":"Example app listening on port 4500 & ip:192.168.10.12","service":"your-service-name","timestamp":"2025-05-20 07:54:47"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"}},"index":0,"keyPattern":{"email":1},"keyValue":{"email":"mallikrahul3507mr@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }","service":"your-service-name","stack":"MongoServerError: E11000 duplicate key error collection: SoundExplore.users index: email_1 dup key: { email: \"mallikrahul3507mr@gmail.com\" }\n    at InsertOneOperation.execute (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Nayon xD\\Projects\\Sound Explores\\Sound-Explore-Library\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-05-20 07:54:50"}
